program statement_group simple_statement if_statement conditional_statement while_statement for_statement assignment_statement expression declaration_statement type io_statement simple_statement declaration_statement relation simple_type array_type math_operators_low_priority math_operators_high_priority factor term expression expression_tail term_tail
start end if else ( ) { } ; while for identifier = write read int float char bool array with constant of + - * / % < > <= >= == !=
program
program:start.statement_group.end statement_group:simple_statement|simple_statement.statement_group if_statement:if.(.conditional_statement.).{.statement_group.}|if.(.conditional_statement.).{.statement_group.}.else.{.statement_group.} while_statement:while.(.conditional_statement.).{.statement_group.} for_statement:for.(.assignment_statement.;.conditional_statement.;.expression.).{.statement_group.} declaration_statement:type.identifier.; assignment_statement:identifier.=.expression.; io_statement:write.(.expression.).;|read.(.expression.).; simple_statement:declaration_statement|assignment_statement|io_statement|if_statement|while_statement|for_statement|conditional_statement conditional_statement:expression.relation.expression simple_type:int|float|char|bool array_type:array.with.constant.of.simple_type type:simple_type|array_type relation:<|<=|==|>=|>|!= math_operators_low_priority:+|- math_operators_high_priority:*|/|% factor:identifier|constant|(.expression.) term:factor|factor.term_tail term_tail:math_operators_high_priority.factor|math_operators_high_priority.factor.term_tail expression:term|term.expression_tail expression_tail:math_operators_low_priority.term|math_operators_low_priority.term.expression_tail